# -*- coding: utf-8 -*-
"""SmallCaps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EtTdfW_Tw82rVOh_uo5ua21u6hJO6Jem
"""

#Carregamento da Bibliotecas
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Leitura dos dasdos e criação da Base de Dados
df_SmallCaps = pd.read_csv('SmallCaps2022.csv')
#Exibição de numeros de linhas e colunas
df_SmallCaps.shape

#Visualização do DataFrame primeiras 5 linhas
df_SmallCaps.head()

#Visualização Completa do DataFrame
df_SmallCaps

#Exibindo itens das colunas 
df_SmallCaps.columns

#Renomeando dados das colunas
df_SmallCaps.rename(columns={
    'Company':'Empresa', 
    'Valuation ($B)':'ValorMercado ($)',
    'Date Joined':'DataIngresso', 
    'Country':'País', 
    'City ':'Cidade',
    'Industry' : 'Setor',
    'Investors':'Investidores'
},inplace=True)

#Exibiçãos tipos de dados da Base de dados
df_SmallCaps.info()

df_SmallCaps['Empresa']

#calculando dados nulos
df_SmallCaps.isnull().sum()

#Exibindo Dados Nulos do dataframe
plt.figure(figsize=(20,5))
plt.title("Exibindo Campos Vazios")
sns.heatmap(df_SmallCaps.isnull(),cbar=False);

#Exibindo valores unicos na base-dados
df_SmallCaps.nunique()

#exibindo quantidade de valores unicos para a coluna escolhida
df_SmallCaps['Setor'].nunique()

#exibindo quantidade de valores unicos para a coluna escolhida em forma de Rank
df_SmallCaps['Setor'].value_counts()

#exibindo quantidade de valores unicos para a coluna escolhida em forma de Rank e o parâmetro normalize exibe o rank em percentual
df_SmallCaps['Setor'].value_counts(normalize=True)

#Exibição com gráfico de barras 
plt.figure(figsize=(30,6))
plt.title("Valores em conta corrente")
plt.bar(df_SmallCaps['Setor'].value_counts().index, df_SmallCaps['Setor'].value_counts(normalize=True));
plt.xticks(rotation=45,ha='right');

#Calculando o Percentual de empresas Criadas por país
basePaises = df_SmallCaps['País'].value_counts(normalize=True) *100
basePaises

#Representação em Gráfico dos Top 10 mundiais

plt.figure(figsize=(20,10))

plt.title("Top 10 Globais em Criação de small caps em 2022")
plt.pie(
    basePaises.head(10), 
    labels = basePaises.index[0:10],
    shadow=True,
    startangle=90,
    );

#Convertendo Tipo de dados String(Object) e tipo Data(time)
df_SmallCaps['DataIngresso'] = pd.to_datetime(df_SmallCaps['DataIngresso'])
#Exibindo Conversão
df_SmallCaps['DataIngresso']

#EXtração de Mês e Ano do Base de Dados e inclusão das colunas no DataFreame
df_SmallCaps['Mês'] = pd.DatetimeIndex(df_SmallCaps['DataIngresso']).month
df_SmallCaps['Ano'] = pd.DatetimeIndex(df_SmallCaps['DataIngresso']).year
df_SmallCaps.head()

#Criando Tabela Analitica, Realizando Agrupamento a Partir do País , mês e Ano. 
listaAgrupada = df_SmallCaps.groupby(by=['País','Mês','Ano','Empresa']).count()['Setor'].reset_index()
listaAgrupada

listaAgrupada.loc[
    listaAgrupada['País'] == 'Brazil'    
]

listaAgrupada.loc[
   listaAgrupada['País'] == 'United States'
    
]